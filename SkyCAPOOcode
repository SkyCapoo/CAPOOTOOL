Max_version = 1.0 --最新的版本
announcement = "這個輔助更新了基礎的功能 2024/8/28"
CETrainer_CEMemo1.Lines.Text = announcement--公告
-------------------------------------------------------------功能模塊----------------------------------------------------------------

function toSigned32(value) --負數修正
    if value >= 0x80000000 then
        return value - 0x100000000
    else
        return value
    end
end
function GameInject(exe)
    local game = exe
    local processID = getProcessIDFromProcessName(game)
    if processID ~= nil then
        openProcess(game)
    else
        showMessage("進程不存在，請打開游戲重新嘗試")
    end
end
---------------------------------------------------------------檢測功能---------------------------------------------------------------
PROCESS_NAME = 'MiniGameApp.exe'
if not openProcess(PROCESS_NAME) then
    messageDialog("錯誤: 無法找到應用程式，請重新打開", mtError)
    closeCE()
    return
end

local PROCESS_NAME = 'MiniGameApp.exe'

local function getHostname()
    local handle = io.popen("hostname")
    if handle then
        local hostname = handle:read("*l")
        handle:close()
        return hostname:match("^%s*(.-)%s*$")
    else
        showMessage("錯誤: 無法取得電腦名稱！")
        closeCE()
        return nil
    end
end

local function isHostnameVip(hostname)
    local vipHostnames = {
         "LAPTOP-2QC5QJ83", "DESKTOP-E8IELO5", "ACER-Windows11", "DESKTOP-40AHL7Q", "DESKTOP-FISCPB3"
    }
    for _, vipHostname in ipairs(vipHostnames) do
        if hostname == vipHostname then
            return true
        end
    end
    return false
end

local hostname = getHostname()

if hostname then
    isVip = isHostnameVip(hostname)

    if isVip then
    canusehack1 = 1
    else
    canusehack1 = 2
    end
else
    -- 如果无法获取主机名
    messageDialog("錯誤: 無法取得電腦名稱！", mtError)
    closeCE()
end



local miniuid = readInteger("[[libiworld.g_nHomeGardenSaveVersion+424]+C]+0")

if miniuid == nil then
    messageDialog("錯誤: 無法讀取記憶體,必須進入您的帳戶以檢查玩家ID", mtError)
    closeCE()
    return
end

-- VIP UID 列表
local vipUIDs = {1088712050, 1089142268, 1251995024, 1300614537, 1277719384}--玩家uid判斷
local isVipUID = false

for i = 1, #vipUIDs do
    if miniuid == vipUIDs[i] then
        isVipUID = true
        break
    end
end


if isVipUID and canusehack1 == 2 then
elseif not isVipUID and canusehack1 == 1 then
elseif isVipUID and canusehack1 == 1 then
else
    messageDialog("您不是使用者", mtError)
    closeCE()
    return
end


---------------------------------------------------------------界面功能---------------------------------------------------------------

function CETrainer_CECustomButton2Click(sender)
if CETrainer_CECheckbox1.Checked == true then

--連接游戲
CETrainer_CECustomButton2.Enabled = false
GameInject("MiniGameApp.exe")
sleep(500)
CETrainer_CECustomButton2.Enabled = true
CETrainer.hide()
sleep(500)
UDF2.show()
UDF2_CEMemo1.Lines.Text = announcement --綫上公告
myuid = readInteger("[[libiworld.g_nHomeGardenSaveVersion+424]+0C]+0")
hostuid = readInteger("[libSandboxEngine.g_WorldMgr]+8C")
pingg = readInteger("libSandboxEngine.RoomSyncResMgr::s_pInstance+32C")
fpss = readFloat("[libMiniBaseEngine.dll+91f120]+2C")
fps = string.format("%.1f", fpss)
UDF2_CEMemo1.Lines.Text = announcement
UDF2_CELabel1.Caption = "UID:  " .. myuid
if hostuid then
UDF2_CELabel2.Caption = "房主UID:  " .. hostuid
return end
UDF2_CELabel3.Caption = "Ping:  " .. pingg
UDF2_CELabel4.Caption = "FPS:  " .. fps
else
showMessage("請先閲讀[用戶使用協議]")
end
end

function UDF2_CEButton1Click(sender)
myuid = readInteger("[[libiworld.g_nHomeGardenSaveVersion+424]+0C]+0")
hostuid = readInteger("[libSandboxEngine.g_WorldMgr]+8C")
pingg = readInteger("libSandboxEngine.RoomSyncResMgr::s_pInstance+32C")
fpss = readFloat("[libMiniBaseEngine.dll+91f120]+2C")
fps = string.format("%.1f", fpss)
UDF2_CEMemo1.Lines.Text = announcement
UDF2_CELabel1.Caption = "UID:  " .. myuid
if hostuid then
UDF2_CELabel2.Caption = "房主UID:  " .. hostuid
return end
UDF2_CELabel3.Caption = "Ping:  " .. pingg
UDF2_CELabel4.Caption = "FPS:  " .. fps
end


function CETrainer_CECheckbox1Click(sender)
if CETrainer_CECheckbox1.Checked == true then
function showCustomMessage(title, message)
  -- 創建一個表單
  local form = createForm(false)
  form.Caption = title
  form.Width = 500
  form.Height = 130

  -- 創建一個標籤來顯示消息
  local label = createLabel(form)
  label.Caption = message
  label.Color = 0x00E9E9E9
  label.Align = 'alClient'
  label.WordWrap = true
  label.AutoSize = false
  label.Font.Size = 10
  label.Font.Name = 'Segoe UI'
  label.Font.Style = 'fsBold'
  label.Font.Color = 0x000000 -- 黑色文字

  -- 創建一個按鈕來關閉窗口
  local button = createButton(form)
  button.Caption = '確定'
  button.AnchorSideBottom.Control = form
  button.AnchorSideBottom.Side = asrBottom
  button.AnchorSideBottom.AnchorTo = 'bottom'
  button.AnchorSideRight.Control = form
  button.AnchorSideRight.Side = asrRight
  button.AnchorSideRight.AnchorTo = 'right'
  button.Top = form.Height - button.Height - 10
  button.Left = form.Width - button.Width - 10
  button.OnClick = function() form.close() end

  form.Position = 'poScreenCenter'
  form.BorderStyle = 'bsDialog'
  form.ShowModal()
end
local chatww =
[=[
1.我們的軟體安全無毒,使用過程中不能破環迷你世界正常遊戲 秩序,封號後果自負
2.本軟件僅供學習,請勿用於非法用途,違者後果自負,如有侵版倒 賣行為,請聯繫作者
]=]
showCustomMessage("用戶使用協議", chatww)
else

end
end

function UDF2_CEButton5Click(sender)
shellExecute("https://qm.qq.com/q/cYKztfFoXe")
end

function UDF2_CEButton6Click(sender)
shellExecute("https://discord.gg/jSwyC4kHvC")
end
function UDF2_CEButton8Click(sender)
UDF2.hide()
sleep(500)
CETrainer.show()
end

function UDF2_CEButton9Click(sender)
closeCE()
return caFree
end

function UDF2_CEButton7Click(sender)
UDF2_CEMemo1.Lines.Text = announcement --綫上公告
end

---------------------------------------------------------------人物屬性---------------------------------------------------------------
--writeInteger
--writeFloat

function UDF2_CECheckbox1Click(sender)
if UDF2_CECheckbox1.Checked == true then
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+98",getProperty(UDF2_CEEdit5,"text"))
else
end
end

function UDF2_CECheckbox2Click(sender)
if UDF2_CECheckbox2.Checked == true then
if Freezehp then Freezehp.destroy(); Freezehp = nil end
Freezehp = createTimer(getMainForm())
Freezehp.interval = 100
Freezehp.OnTimer = function()
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+94",getProperty(UDF2_CEEdit6,"text"))
end
else
if Freezehp then Freezehp.destroy(); Freezehp = nil end
end
end

function UDF2_CECheckbox3Click(sender)
if UDF2_CECheckbox3.Checked == true then
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+22c",getProperty(UDF2_CEEdit7,"text"))
else
end
end

function UDF2_CECheckbox4Click(sender)
if UDF2_CECheckbox4.Checked == true then
if Freezehunger then Freezehunger.destroy(); Freezehunger = nil end
Freezehunger = createTimer(getMainForm())
Freezehunger.interval = 100
Freezehunger.OnTimer = function()
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+220",getProperty(UDF2_CEEdit8,"text"))
end
else
if Freezehunger then Freezehunger.destroy(); Freezehunger = nil end
end
end

function UDF2_CECheckbox5Click(sender)
if UDF2_CECheckbox5.Checked == true then
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+288",getProperty(UDF2_CEEdit9,"text"))
else
end
end

function UDF2_CECheckbox6Click(sender)
if UDF2_CECheckbox6.Checked == true then
if Freezestr then Freezestr.destroy(); Freezestr = nil end
Freezestr = createTimer(getMainForm())
Freezestr.interval = 100
Freezestr.OnTimer = function()
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+280",getProperty(UDF2_CEEdit10,"text"))
end
else
if Freezestr then Freezestr.destroy(); Freezestr = nil end
end
end

function UDF2_CECheckbox7Click(sender)
if UDF2_CECheckbox7.Checked == true then
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+a8",getProperty(UDF2_CEEdit11,"text"))
else
end
end

function UDF2_CECheckbox8Click(sender)
if UDF2_CECheckbox8.Checked == true then
jfhud = readFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+14C")
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+14C",getProperty(UDF2_CEEdit12,"text"))
else
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+14C",jfhud)
end
end

function UDF2_CECheckbox9Click(sender)
if UDF2_CECheckbox9.Checked == true then
jattack = readFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+144")
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+144",getProperty(UDF2_CEEdit13,"text"))
else
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+144",jattack)
end
end

function UDF2_CECheckbox10Click(sender)
if UDF2_CECheckbox10.Checked == true then
yfhud = readFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+155")
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+155",getProperty(UDF2_CEEdit14,"text"))
else
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+155",yfhud)
end
end

function UDF2_CECheckbox11Click(sender)
if UDF2_CECheckbox11.Checked == true then
yattack = readFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+148")
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+148",getProperty(UDF2_CEEdit15,"text"))
else
writeFloat("[[libSandboxEngine.g_pPlayerCtrl]+280]+148",yattack)
end
end

---------------------------------------------------------------人物功能---------------------------------------------------------------

function UDF2_CECheckbox12Click(sender)
if UDF2_CECheckbox12.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(swuddi,libSandboxEngine.dll,76 ?? 0F 28 C8 F3 0F 10 45 ?? F3 0F 11 03) // should be unique
swuddi:
  db EB
registersymbol(swuddi)
]=])
else
autoAssemble([=[{$asm}
swuddi:
  db 76
unregistersymbol(swuddi)
]=])
end
end

function UDF2_CECheckbox13Click(sender)
if UDF2_CECheckbox13.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(INJECT,libSandboxEngine.dll,8B 41 34 35 AC D4 5F 38)
alloc(newmem,$1000)
label(code)
label(return)
newmem:
code:
  mov eax,#945804388
  xor eax,385FD4AC
  jmp return
INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)
]=])
else
autoAssemble([=[{$asm}
INJECT:
  db 8B 41 34 35 AC D4 5F 38
unregistersymbol(INJECT)
dealloc(newmem)
]=])
end
end

function UDF2_CECheckbox14Click(sender)
if UDF2_CECheckbox14.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(cleanallmob,libSandboxEngine.dll,75 ?? 8B 06 FF 90 ?? ?? ?? ?? 8B 8E ?? ?? ?? ?? 6A ?? C7) // should be unique
cleanallmob:
  db EB 08
registersymbol(cleanallmob)
]=])
else
autoAssemble([=[{$asm}
cleanallmob:
  db 75 2A
unregistersymbol(cleanallmob)
]=])
end
end

function UDF2_CECheckbox15Click(sender)
if UDF2_CECheckbox15.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(Rockethack,libSandboxEngine.dll,83 BF ?? ?? ?? ?? 64 7D) // should be unique
Rockethack:
  db 83 87
registersymbol(Rockethack)
]=])
else
autoAssemble([=[{$asm}
Rockethack:
  db 83 BF
unregistersymbol(Rockethack)
]=])
end
end

function UDF2_CECheckbox16Click(sender)
if UDF2_CECheckbox16.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(nohunger,libSandboxEngine.dll,F3 0F 11 86 ?? ?? ?? ?? 76 ?? C7 86 ?? ?? ?? ?? 00 00 00 00 5E 5D C2) // should be unique
nohunger:
db 90 90 90 90 90 90 90 90
registersymbol(nohunger)
]=])
else
autoAssemble([=[{$asm}
nohunger:
movss [esi+220],xmm0
unregistersymbol(nohunger)
]=])
end
end

function UDF2_CECheckbox17Click(sender)
if UDF2_CECheckbox16.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(noneedoxy,libSandboxEngine.dll,F3 0F 11 87 ?? ?? ?? ?? 85 F6 0F 84) // should be unique
noneedoxy:
db 90 90 90 90 90 90 90 90
registersymbol(noneedoxy)
]=])
else
autoAssemble([=[{$asm}
noneedoxy:
movss [edi+140],xmm0
unregistersymbol(noneedoxy)
]=])
end
end

function UDF2_CECheckbox18Click(sender)
if UDF2_CECheckbox18.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(spownegg,libSandboxEngine.dll,01 47 ?? B9 ?? ?? ?? ?? 8B 47 ?? 99) // should be unique
registersymbol(spownegg)
alloc(newmem,100)
label(returnhere)
newmem:
mov [edi+8],#999999999
mov ecx,#20
jmp returnhere
spownegg:
jmp newmem
nop
nop
nop
returnhere:
]=])
else
autoAssemble([=[{$asm}
dealloc(newmem)
spownegg:
db 01 47 08
mov ecx,#20
unregistersymbol(spownegg)
]=])
end
end

function UDF2_CECheckbox19Click(sender)
if UDF2_CECheckbox19.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(speedegg,libSandboxEngine.dll,0F 8C ?? ?? ?? ?? E8 ?? ?? ?? ?? 6A ?? 8B C8 8B 10 FF 92 ?? ?? ?? ?? 6A) // should be unique
speedegg:
db 8D
registersymbol(speedegg)
]=])
else
autoAssemble([=[{$asm}
speedegg:
db 8C
unregistersymbol(speedegg)
]=])
end
end

function UDF2_CECheckbox20Click(sender)
if UDF2_CECheckbox20.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(respwonitem,libSandboxEngine.dll,75 0F 8B 06 8B CE FF 90 ?? ?? ?? ?? 5E 5D C2 ?? ?? 83) // should be unique
respwonitem:
  db EB
registersymbol(respwonitem)
]=])
else
autoAssemble([=[{$asm}
respwonitem:
  db 75
unregistersymbol(respwonitem)
]=])
end
end

function UDF2_CECheckbox21Click(sender)
if UDF2_CECheckbox21.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(hyack,libSandboxEngine.dll,FF 4C 37 ?? EB)
registersymbol(hyack)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
newmem:
originalcode:
mov [edi+esi+08],#99999999
  dec [edi+esi+08]
  jmp libSandboxEngine.LivingAttrib::tick+1B0
exit:
jmp returnhere
hyack:
jmp newmem
nop
returnhere:
]=])
else
autoAssemble([=[{$asm}
dealloc(newmem)
hyack:
db FF 4C 37 08 EB 0E
unregistersymbol(hyack)
]=])
end
end

function UDF2_CECheckbox22Click(sender)
if UDF2_CECheckbox22.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(hyacke,libSandboxEngine.dll,FF 4C 37 ?? EB)
registersymbol(hyacke)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
newmem:
originalcode:
mov [edi+esi+08],#0
dec [edi+esi+08]
jmp libSandboxEngine.LivingAttrib::tick+1B0
exit:
jmp returnhere
hyacke:
jmp newmem
nop
returnhere:
]=])
else
autoAssemble([=[{$asm}
dealloc(newmem)
hyacke:
db FF 4C 37 08 EB 0E
unregistersymbol(hyacke)
]=])
end
end


function UDF2_CEButton11Click(sender)
UDF2_CEEdit2.Text = string.format("%.1f",toSigned32(readInteger("[[libSandboxEngine.g_pPlayerCtrl]+270]+DC")) / 100)
UDF2_CEEdit3.Text = string.format("%.1f",toSigned32(readInteger("[[libSandboxEngine.g_pPlayerCtrl]+270]+E0")) / 100)
UDF2_CEEdit4.Text = string.format("%.1f",toSigned32(readInteger("[[libSandboxEngine.g_pPlayerCtrl]+270]+E4")) / 100)
end

function UDF2_CEButton10Click(sender)
autoAssemble([=[{$asm}
alloc(gotoX,8)
registersymbol(gotoX)
alloc(gotoY,8)
registersymbol(gotoY)
alloc(gotoZ,8)
registersymbol(gotoZ)
gotoX:
dd #1000
gotoY:
dd #700
gotoZ:
dd #1000
]=])
sleep(20)
writeInteger("gotoX",getProperty(UDF2_CEEdit2,"text") * 100)
writeInteger("gotoY",getProperty(UDF2_CEEdit3,"text") * 100)
writeInteger("gotoZ",getProperty(UDF2_CEEdit4,"text") * 100)
sleep(20)
autoAssemble([=[{$asm}
alloc(tpcall,256)
createthread(tpcall)
tpcall:
pushad
push [gotoZ]
push [gotoY]
push [gotoX]
mov ecx,[libSandboxEngine.g_pPlayerCtrl]
mov ecx,[ecx+270]
call libSandboxEngine.ActorLocoMotion::setPosition
popad
ret
]=])
sleep(100)
autoAssemble([=[{$asm}
dealloc(gotoX)
unregistersymbol(gotoX)
dealloc(gotoY)
unregistersymbol(gotoY)
dealloc(gotoZ)
unregistersymbol(gotoZ)
]=])
end

----------------------------------------------------時間天數-----------------------------------------

function UDF2_CEButton12Click(sender)
writeInteger("[libSandboxEngine.g_WorldMgr]+17C",(getProperty(UDF2_CEEdit16,"text")*24000)-23999)
end

function UDF2_CEButton13Click(sender)
writeInteger("[libSandboxEngine.g_WorldMgr]+180",(getProperty(UDF2_CEEdit17,"text")*1000)-6000)
end

function UDF2_CECheckbox23Click(sender)
if UDF2_CECheckbox23.Checked == true then
autoAssemble([=[{$asm}
aobscanmodule(locktime,libSandboxEngine.dll,89 86 80 01 00 00 74) // should be unique
registersymbol(locktime)
locktime:
  db 90 90 90 90 90 90
]=])
else
autoAssemble([=[{$asm}
locktime:
  db 89 86 80 01 00 00
unregistersymbol(locktime)
dealloc(locktime)
]=])
end
end
--------------------------------------------------聯機功能--------------------------------------------
